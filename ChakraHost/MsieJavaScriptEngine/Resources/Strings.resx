<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Common_ArgumentIsEmpty" xml:space="preserve">
    <value>The parameter '{0}' must be a non-empty string.</value>
  </data>
  <data name="Common_ArgumentIsNull" xml:space="preserve">
    <value>The parameter '{0}' must be a non-nullable.</value>
  </data>
  <data name="Common_FileNotExist" xml:space="preserve">
    <value>File '{0}' not exist.</value>
  </data>
  <data name="Common_ValueIsNull" xml:space="preserve">
    <value>Value cannot be null.</value>
  </data>
  <data name="ErrorDetails_Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="ErrorDetails_ColumnNumber" xml:space="preserve">
    <value>Column number</value>
  </data>
  <data name="ErrorDetails_EngineMode" xml:space="preserve">
    <value>Engine mode</value>
  </data>
  <data name="ErrorDetails_ErrorCode" xml:space="preserve">
    <value>Error code</value>
  </data>
  <data name="ErrorDetails_LineNumber" xml:space="preserve">
    <value>Line number</value>
  </data>
  <data name="ErrorDetails_Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="ErrorDetails_SourceFragment" xml:space="preserve">
    <value>Source fragment</value>
  </data>
  <data name="Resources_ResourceIsNull" xml:space="preserve">
    <value>Resource with name '{0}' is null.</value>
  </data>
  <data name="Runtime_ActiveScriptDispatcherNotInitialized" xml:space="preserve">
    <value>ActiveScript dispatcher is not initialized.</value>
  </data>
  <data name="Runtime_FunctionNameIsForbidden" xml:space="preserve">
    <value>The function name '{0}' is forbidden, as is contained in the list of reserved words of JavaScript language.</value>
  </data>
  <data name="Runtime_FunctionNotExist" xml:space="preserve">
    <value>The function with the name '{0}' does not exist.</value>
  </data>
  <data name="Runtime_FunctionParameterTypeNotSupported" xml:space="preserve">
    <value>One of the function parameters '{0}' has a type `{1}`, which is not supported.</value>
  </data>
  <data name="Runtime_InvalidFunctionNameFormat" xml:space="preserve">
    <value>The function name '{0}' has incorrect format.</value>
  </data>
  <data name="Runtime_InvalidParserImplementationError" xml:space="preserve">
    <value>The parser you passed implements neither `IActiveScriptParse32` nor `IActiveScriptParse64`.</value>
  </data>
  <data name="Runtime_InvalidPropertyNameFormat" xml:space="preserve">
    <value>Property name '{0}' has incorrect format.</value>
  </data>
  <data name="Runtime_InvalidVariableNameFormat" xml:space="preserve">
    <value>The variable name '{0}' has incorrect format.</value>
  </data>
  <data name="Runtime_ItemNotFound" xml:space="preserve">
    <value>Item with name '{0}' not found.</value>
  </data>
  <data name="Runtime_JsEngineModeNotSupported" xml:space="preserve">
    <value>Selected '{0}' mode of JavaScript engine is not supported!</value>
  </data>
  <data name="Runtime_JsEngineNotLoaded" xml:space="preserve">
    <value>Failed to load a {0} JavaScript engine. Try to install the Internet Explorer {1} or higher.
See more details:

{2}</value>
  </data>
  <data name="Runtime_JsEnginesChakraJsRtAndActiveScriptConflict" xml:space="preserve">
    <value>It is prohibited to use the Chakra JsRT and the Chakra ActiveScript on one machine at a time.</value>
  </data>
  <data name="Runtime_JsEnginesNotFound" xml:space="preserve">
    <value>Could not found none of the JavaScript engines. Perhaps you have not installed the Internet Explorer browser.</value>
  </data>
  <data name="Runtime_PropertyNameIsForbidden" xml:space="preserve">
    <value>Property name '{0}' is forbidden, as one of its parts matches with the reserved word of JavaScript language.</value>
  </data>
  <data name="Runtime_PropertyNotExist" xml:space="preserve">
    <value>The property '{1}' of variable '{0}' does not exist.</value>
  </data>
  <data name="Runtime_PropertyTypeNotSupported" xml:space="preserve">
    <value>The property '{1}' of variable '{0}' has a type `{2}`, which is not supported.</value>
  </data>
  <data name="Runtime_ReturnValueTypeNotSupported" xml:space="preserve">
    <value>The type of return value `{0}` is not supported.</value>
  </data>
  <data name="Runtime_TypeUnsupported" xml:space="preserve">
    <value>Cannot convert to `{0}`. The type is unsupported.</value>
  </data>
  <data name="Runtime_VariableNameIsForbidden" xml:space="preserve">
    <value>The variable name '{0}' is forbidden, as is contained in the list of reserved words of JavaScript language.</value>
  </data>
  <data name="Runtime_VariableNotExist" xml:space="preserve">
    <value>The variable with the name '{0}' does not exist.</value>
  </data>
  <data name="Runtime_VariableTypeNotSupported" xml:space="preserve">
    <value>The variable '{0}' has a type `{1}`, which is not supported.</value>
  </data>
</root>